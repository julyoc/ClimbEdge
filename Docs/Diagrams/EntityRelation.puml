@startuml ClimbEdge.Docs.Diagrams.EntityRelation

package "Entities" {

    entity "BaseEntity" as BaseEntity {
        +Id: long
        +Uid: Guid
        +Slug: string
        +Metadata: jsonb
        +RowVersion: byte[]
        +CreatedAt: DateTime
        +UpdatedAt: DateTime?
        +DeletedAt: DateTime?
        +RestoredAt: DateTime?
        +LockedAt: DateTime?
    }

    entity "Configuration" as Configuration {
        ..inherits BaseEntity..

        +Key: string
        +Value: string
        +Description: string?
        +IsSensitive: bool
        +UserId: long
    }

    entity "UserProfile" as UserProfile {
        ..inherits BaseEntity..

        +UserId: long
        +FirstName: string?
        +LastName: string?
        +DateOfBirth: DateOnly?
        +Bio: string?
        +ProfilePictureUrl: string?
        +Website: string?
        +Location: string?
        +Country: string
        +TimeZone: string
        +PreferredLanguage: string
        +IsPublic: bool
        +EmailNotifications: bool
        +PushNotifications: bool
        +ClimbingExperienceLevel: string?
        +PreferredClimbingStyle: string?
        +EmergencyContact: string?
        +EmergencyContactName: string?
    }

    entity "AppUser" as AppUser {
        ..inherits BaseEntity..

        +Username: string?
        +NormalizedUserName: string?
        +Email: string?
        +NormalizedEmail: string?
        +EmailConfirmed: bool
        +PasswordHash: string?
        +SecurityStamp: string?
        +ConcurrencyStamp: string?
        +PhoneNumber: string?
        +PhoneNumberConfirmed: bool
        +TwoFactorEnabled: bool
        +LockoutEnd: DateTime?
        +LockoutEnabled: bool
        +AccessFailedCount: int
    }

    entity "AppRole" as AppRole {
        +Id: long
        +Name: string?
        +NormalizedName: string?
        +ConcurrencyStamp: string?
    }
}

package "Entities.Boards" {
    enum "BoardVisibility" as BoardVisibility {
        +Public
        +Private
        +Protected
    }

    enum "BoardMemberRole" as BoardMemberRole {
        +Owner
        +Admin
        +Member
    }

    entity "Board" as Board {
        ..inherits BaseEntity..

        +Name: string
        +Description: string?
        +Visibility: string
    }

    entity "BoardMember" as BoardMember {
        ..inherits BaseEntity..

        +BoardId: long
        +UserId: long
        +IsPropertyOwner: bool
        +Role: BoardMemberRole
    }

    entity "BoardConfig" as BoardConfig {
        ..inherits BaseEntity..

        +BoardId: long
        +Content: string
        +Visibility: BoardVisibility
        +Columns: int
        +Rows: int
        +Width: int
        +Height: int
        +Inclination_grades: int
        +Difficulty: int
    }
    entity "BoardItemType" as BoardItemType {
        ..inherits BaseEntity..

        +Name: string
        +Description: string?
        +Difficulty: int
        +Icon: string?
    }

    entity "BoardItemTextureMaterial" as BoardItemTextureMaterial {
        ..inherits BaseEntity..

        +Name: string
        +Description: string?
        +ImageUrl: string
        +ThumbnailUrl: string?
        +Difficulty: int
    }

    entity "BoardItemTexture" as BoardItemTexture {
        ..inherits BaseEntity..

        +Name: string
        +Description: string?
        +ImageUrl: string
        +ThumbnailUrl: string?
        +Difficulty: int
    }

    entity "BoardItem" as BoardItem {
        ..inherits BaseEntity..

        +BoardId: long
        +PositionX: int
        +PositionY: int
        +Difficulty: int
        +BoardItemTypeId: long
        +BoardItemTextureId: long?
        +BoardItemTextureMaterialId: long?
    }
}

package "Entities.DifficultyScales" {
    entity "DifficultyScaleType" as DifficultyScaleType {
        ..inherits BaseEntity..

        +Name: string
        +Description: string?
        +Icon: string?
    }
    entity "DifficultyScaleName" as DifficultyScaleName {
        ..inherits BaseEntity..
        
        +Name: string
        +Description: string?
        +DifficultyScaleTypeId: long
    }

    entity "DifficultyScale" as DifficultyScale {
        ..inherits BaseEntity..

        +DifficultyScaleNameId: long
        +DifficultyGroupId: long
        +Value: string
        +IRCRA: int
    }

    entity "DifficultyGroup" as DifficultyGroup {
        ..inherits BaseEntity..

        +Level: int
        +Name: string
        +Description: string?
    }
}

package "Entities.Boards.Problems" {
    entity "BoardProblem" as BoardProblem {
        ..inherits BaseEntity..

        +BoardId: long
        +Name: string
        +Description: string?
        +Difficulty: int
        +IsPublic: bool
        +CreatedByUserId: long
    }

    entity "BoardProblemItem" as BoardProblemItem {
        ..inherits BaseEntity..

        +Color: string
        +ColorCode: int
        +BoardProblemId: long
        +BoardItemId: long
    }
}

UserProfile "1" -- "1" AppUser : has <
AppRole "0..*" -- "0..*" AppUser : belongs to
Board "1" -- "0..*" BoardMember : has <
BoardMember "0..*" -- "1" AppUser : is member of <
BoardConfig "1" -- "1" Board : has <
BoardItemType "0..*" -- "0..*" BoardItem : is of type <
BoardItemTextureMaterial "0..*" -- "0..*" BoardItem : is of material
BoardItemTexture "0..*" -- "0..*" BoardItem : is of texture <
BoardItem "0..*" -- "1" BoardConfig : belongs to <
DifficultyScaleType "0..1" -- "0..*" DifficultyScaleName : has <
DifficultyScaleName "0..1" -- "0..*" DifficultyScale : has <
DifficultyScale "0..*" -- "1" DifficultyGroup : belongs to <
BoardProblem "0..*" -- "1" Board : belongs to <
BoardProblemItem "0..*" -- "1" BoardProblem : belongs to <
BoardProblemItem "0..*" -- "1" BoardItem : is of item <
AppUser "0..1" -- "0..*" BoardProblem : created by <
AppUser "0..1" -- "0..*" Configuration : created by <
@enduml
' This file is auto-generated by PlantUML.